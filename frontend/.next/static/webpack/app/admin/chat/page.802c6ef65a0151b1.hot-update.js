"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/chat/page",{

/***/ "(app-pages-browser)/./src/store/chatSlice.ts":
/*!********************************!*\
  !*** ./src/store/chatSlice.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMessage: () => (/* binding */ addMessage),\n/* harmony export */   clearMessages: () => (/* binding */ clearMessages),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetchMessagesByRoom: () => (/* binding */ fetchMessagesByRoom),\n/* harmony export */   selectChatError: () => (/* binding */ selectChatError),\n/* harmony export */   selectChatLoading: () => (/* binding */ selectChatLoading),\n/* harmony export */   selectChatMessages: () => (/* binding */ selectChatMessages),\n/* harmony export */   selectCurrentRoom: () => (/* binding */ selectCurrentRoom),\n/* harmony export */   setRoom: () => (/* binding */ setRoom)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n// src/store/chatSlice.ts\n\n\nconst initialState = {\n    messages: [],\n    currentRoom: null,\n    loading: false,\n    error: null\n};\n// 🌐 API base URL\nconst BASE_URL = \"http://localhost:5012\"; // http://localhost:5012/api\n// 📥 Mesajları getir (by room)\nconst fetchMessagesByRoom = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"chat/fetchMessagesByRoom\", async (roomId, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"\".concat(BASE_URL, \"/chat/\").concat(roomId), {\n            withCredentials: true\n        });\n        return response.data;\n    } catch (error) {\n        var _error_response_data, _error_response;\n        const message = (error === null || error === void 0 ? void 0 : (_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Mesajlar alınamadı\";\n        return rejectWithValue(message);\n    }\n});\nconst chatSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"chat\",\n    initialState,\n    reducers: {\n        setRoom (state, action) {\n            state.currentRoom = action.payload;\n            state.messages = []; // Oda değişince önceki mesajları sıfırla\n            state.error = null;\n        },\n        addMessage (state, action) {\n            state.messages.push(action.payload);\n        },\n        clearMessages (state) {\n            state.messages = [];\n            state.error = null;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchMessagesByRoom.pending, (state)=>{\n            state.loading = true;\n            state.error = null;\n        }).addCase(fetchMessagesByRoom.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.messages = action.payload;\n        }).addCase(fetchMessagesByRoom.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.payload || \"Bilinmeyen hata\";\n        });\n    }\n});\n// 🔄 Actions\nconst { setRoom, addMessage, clearMessages } = chatSlice.actions;\n// 🔍 Selectors\nconst selectChatMessages = (state)=>state.chat.messages;\nconst selectChatLoading = (state)=>state.chat.loading;\nconst selectChatError = (state)=>state.chat.error;\nconst selectCurrentRoom = (state)=>state.chat.currentRoom;\n// ✅ Export reducer\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (chatSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZS9jaGF0U2xpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5QkFBeUI7QUFDdUQ7QUFFdEQ7QUF1QjFCLE1BQU1HLGVBQTBCO0lBQzlCQyxVQUFVLEVBQUU7SUFDWkMsYUFBYTtJQUNiQyxTQUFTO0lBQ1RDLE9BQU87QUFDVDtBQUVBLGtCQUFrQjtBQUNsQixNQUFNQyxXQUFXQyx1QkFBaUMsRUFBRSw0QkFBNEI7QUFFaEYsK0JBQStCO0FBQ3hCLE1BQU1HLHNCQUFzQlosa0VBQWdCQSxDQUlqRCw0QkFBNEIsT0FBT2E7UUFBUSxFQUFFQyxlQUFlLEVBQUU7SUFDOUQsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTWIsNkNBQUtBLENBQUNjLEdBQUcsQ0FBQyxHQUFvQkgsT0FBakJMLFVBQVMsVUFBZSxPQUFQSyxTQUFVO1lBQzdESSxpQkFBaUI7UUFDbkI7UUFDQSxPQUFPRixTQUFTRyxJQUFJO0lBQ3RCLEVBQUUsT0FBT1gsT0FBWTtZQUVqQkEsc0JBQUFBO1FBREYsTUFBTVksVUFDSlosQ0FBQUEsa0JBQUFBLDZCQUFBQSxrQkFBQUEsTUFBT1EsUUFBUSxjQUFmUix1Q0FBQUEsdUJBQUFBLGdCQUFpQlcsSUFBSSxjQUFyQlgsMkNBQUFBLHFCQUF1QlksT0FBTyxLQUFJO1FBQ3BDLE9BQU9MLGdCQUFnQks7SUFDekI7QUFDRixHQUFHO0FBRUgsTUFBTUMsWUFBWW5CLDZEQUFXQSxDQUFDO0lBQzVCb0IsTUFBTTtJQUNObEI7SUFDQW1CLFVBQVU7UUFDUkMsU0FBUUMsS0FBSyxFQUFFQyxNQUE2QjtZQUMxQ0QsTUFBTW5CLFdBQVcsR0FBR29CLE9BQU9DLE9BQU87WUFDbENGLE1BQU1wQixRQUFRLEdBQUcsRUFBRSxFQUFFLHlDQUF5QztZQUM5RG9CLE1BQU1qQixLQUFLLEdBQUc7UUFDaEI7UUFDQW9CLFlBQVdILEtBQUssRUFBRUMsTUFBa0M7WUFDbERELE1BQU1wQixRQUFRLENBQUN3QixJQUFJLENBQUNILE9BQU9DLE9BQU87UUFDcEM7UUFDQUcsZUFBY0wsS0FBSztZQUNqQkEsTUFBTXBCLFFBQVEsR0FBRyxFQUFFO1lBQ25Cb0IsTUFBTWpCLEtBQUssR0FBRztRQUNoQjtJQUNGO0lBQ0F1QixlQUFlLENBQUNDO1FBQ2RBLFFBQ0dDLE9BQU8sQ0FBQ3BCLG9CQUFvQnFCLE9BQU8sRUFBRSxDQUFDVDtZQUNyQ0EsTUFBTWxCLE9BQU8sR0FBRztZQUNoQmtCLE1BQU1qQixLQUFLLEdBQUc7UUFDaEIsR0FDQ3lCLE9BQU8sQ0FBQ3BCLG9CQUFvQnNCLFNBQVMsRUFBRSxDQUFDVixPQUFPQztZQUM5Q0QsTUFBTWxCLE9BQU8sR0FBRztZQUNoQmtCLE1BQU1wQixRQUFRLEdBQUdxQixPQUFPQyxPQUFPO1FBQ2pDLEdBQ0NNLE9BQU8sQ0FBQ3BCLG9CQUFvQnVCLFFBQVEsRUFBRSxDQUFDWCxPQUFPQztZQUM3Q0QsTUFBTWxCLE9BQU8sR0FBRztZQUNoQmtCLE1BQU1qQixLQUFLLEdBQUdrQixPQUFPQyxPQUFPLElBQUk7UUFDbEM7SUFDSjtBQUNGO0FBRUEsYUFBYTtBQUNOLE1BQU0sRUFBRUgsT0FBTyxFQUFFSSxVQUFVLEVBQUVFLGFBQWEsRUFBRSxHQUFHVCxVQUFVZ0IsT0FBTyxDQUFDO0FBRXhFLGVBQWU7QUFDUixNQUFNQyxxQkFBcUIsQ0FBQ2IsUUFBcUJBLE1BQU1jLElBQUksQ0FBQ2xDLFFBQVEsQ0FBQztBQUNyRSxNQUFNbUMsb0JBQW9CLENBQUNmLFFBQXFCQSxNQUFNYyxJQUFJLENBQUNoQyxPQUFPLENBQUM7QUFDbkUsTUFBTWtDLGtCQUFrQixDQUFDaEIsUUFBcUJBLE1BQU1jLElBQUksQ0FBQy9CLEtBQUssQ0FBQztBQUMvRCxNQUFNa0Msb0JBQW9CLENBQUNqQixRQUFxQkEsTUFBTWMsSUFBSSxDQUFDakMsV0FBVyxDQUFDO0FBRTlFLG1CQUFtQjtBQUNuQixpRUFBZWUsVUFBVXNCLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsiL2hvbWUvb3JoYW4vRG9rdW1lbnRlL2FuYXN0YXNpYU1hc3NhZ2UvZnJvbnRlbmQvc3JjL3N0b3JlL2NoYXRTbGljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc3RvcmUvY2hhdFNsaWNlLnRzXG5pbXBvcnQgeyBjcmVhdGVBc3luY1RodW5rLCBjcmVhdGVTbGljZSwgUGF5bG9hZEFjdGlvbiB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XG5pbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuXG4vLyDwn5S4IE1lc2FqIHRpcGlcbmV4cG9ydCBpbnRlcmZhY2UgQ2hhdE1lc3NhZ2Uge1xuICBfaWQ6IHN0cmluZztcbiAgcm9vbUlkOiBzdHJpbmc7XG4gIHNlbmRlcjoge1xuICAgIF9pZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBlbWFpbDogc3RyaW5nO1xuICB9O1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGNyZWF0ZWRBdDogc3RyaW5nO1xufVxuXG4vLyDwn5S4IFNsaWNlIGR1cnVtdVxuaW50ZXJmYWNlIENoYXRTdGF0ZSB7XG4gIG1lc3NhZ2VzOiBDaGF0TWVzc2FnZVtdO1xuICBjdXJyZW50Um9vbTogc3RyaW5nIHwgbnVsbDtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7XG59XG5cbmNvbnN0IGluaXRpYWxTdGF0ZTogQ2hhdFN0YXRlID0ge1xuICBtZXNzYWdlczogW10sXG4gIGN1cnJlbnRSb29tOiBudWxsLFxuICBsb2FkaW5nOiBmYWxzZSxcbiAgZXJyb3I6IG51bGwsXG59O1xuXG4vLyDwn4yQIEFQSSBiYXNlIFVSTFxuY29uc3QgQkFTRV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19NRURJQV9VUkw7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NTAxMi9hcGlcblxuLy8g8J+TpSBNZXNhamxhcsSxIGdldGlyIChieSByb29tKVxuZXhwb3J0IGNvbnN0IGZldGNoTWVzc2FnZXNCeVJvb20gPSBjcmVhdGVBc3luY1RodW5rPFxuICBDaGF0TWVzc2FnZVtdLFxuICBzdHJpbmcsXG4gIHsgcmVqZWN0VmFsdWU6IHN0cmluZyB9XG4+KFwiY2hhdC9mZXRjaE1lc3NhZ2VzQnlSb29tXCIsIGFzeW5jIChyb29tSWQsIHsgcmVqZWN0V2l0aFZhbHVlIH0pID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgJHtCQVNFX1VSTH0vY2hhdC8ke3Jvb21JZH1gLCB7XG4gICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUsXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBjb25zdCBtZXNzYWdlID1cbiAgICAgIGVycm9yPy5yZXNwb25zZT8uZGF0YT8ubWVzc2FnZSB8fCBcIk1lc2FqbGFyIGFsxLFuYW1hZMSxXCI7XG4gICAgcmV0dXJuIHJlamVjdFdpdGhWYWx1ZShtZXNzYWdlKTtcbiAgfVxufSk7XG5cbmNvbnN0IGNoYXRTbGljZSA9IGNyZWF0ZVNsaWNlKHtcbiAgbmFtZTogXCJjaGF0XCIsXG4gIGluaXRpYWxTdGF0ZSxcbiAgcmVkdWNlcnM6IHtcbiAgICBzZXRSb29tKHN0YXRlLCBhY3Rpb246IFBheWxvYWRBY3Rpb248c3RyaW5nPikge1xuICAgICAgc3RhdGUuY3VycmVudFJvb20gPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgIHN0YXRlLm1lc3NhZ2VzID0gW107IC8vIE9kYSBkZcSfacWfaW5jZSDDtm5jZWtpIG1lc2FqbGFyxLEgc8SxZsSxcmxhXG4gICAgICBzdGF0ZS5lcnJvciA9IG51bGw7XG4gICAgfSxcbiAgICBhZGRNZXNzYWdlKHN0YXRlLCBhY3Rpb246IFBheWxvYWRBY3Rpb248Q2hhdE1lc3NhZ2U+KSB7XG4gICAgICBzdGF0ZS5tZXNzYWdlcy5wdXNoKGFjdGlvbi5wYXlsb2FkKTtcbiAgICB9LFxuICAgIGNsZWFyTWVzc2FnZXMoc3RhdGUpIHtcbiAgICAgIHN0YXRlLm1lc3NhZ2VzID0gW107XG4gICAgICBzdGF0ZS5lcnJvciA9IG51bGw7XG4gICAgfSxcbiAgfSxcbiAgZXh0cmFSZWR1Y2VyczogKGJ1aWxkZXIpID0+IHtcbiAgICBidWlsZGVyXG4gICAgICAuYWRkQ2FzZShmZXRjaE1lc3NhZ2VzQnlSb29tLnBlbmRpbmcsIChzdGF0ZSkgPT4ge1xuICAgICAgICBzdGF0ZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgc3RhdGUuZXJyb3IgPSBudWxsO1xuICAgICAgfSlcbiAgICAgIC5hZGRDYXNlKGZldGNoTWVzc2FnZXNCeVJvb20uZnVsZmlsbGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIHN0YXRlLm1lc3NhZ2VzID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICB9KVxuICAgICAgLmFkZENhc2UoZmV0Y2hNZXNzYWdlc0J5Um9vbS5yZWplY3RlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgICAgc3RhdGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICBzdGF0ZS5lcnJvciA9IGFjdGlvbi5wYXlsb2FkIHx8IFwiQmlsaW5tZXllbiBoYXRhXCI7XG4gICAgICB9KTtcbiAgfSxcbn0pO1xuXG4vLyDwn5SEIEFjdGlvbnNcbmV4cG9ydCBjb25zdCB7IHNldFJvb20sIGFkZE1lc3NhZ2UsIGNsZWFyTWVzc2FnZXMgfSA9IGNoYXRTbGljZS5hY3Rpb25zO1xuXG4vLyDwn5SNIFNlbGVjdG9yc1xuZXhwb3J0IGNvbnN0IHNlbGVjdENoYXRNZXNzYWdlcyA9IChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5jaGF0Lm1lc3NhZ2VzO1xuZXhwb3J0IGNvbnN0IHNlbGVjdENoYXRMb2FkaW5nID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmNoYXQubG9hZGluZztcbmV4cG9ydCBjb25zdCBzZWxlY3RDaGF0RXJyb3IgPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUuY2hhdC5lcnJvcjtcbmV4cG9ydCBjb25zdCBzZWxlY3RDdXJyZW50Um9vbSA9IChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5jaGF0LmN1cnJlbnRSb29tO1xuXG4vLyDinIUgRXhwb3J0IHJlZHVjZXJcbmV4cG9ydCBkZWZhdWx0IGNoYXRTbGljZS5yZWR1Y2VyO1xuIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jVGh1bmsiLCJjcmVhdGVTbGljZSIsImF4aW9zIiwiaW5pdGlhbFN0YXRlIiwibWVzc2FnZXMiLCJjdXJyZW50Um9vbSIsImxvYWRpbmciLCJlcnJvciIsIkJBU0VfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX01FRElBX1VSTCIsImZldGNoTWVzc2FnZXNCeVJvb20iLCJyb29tSWQiLCJyZWplY3RXaXRoVmFsdWUiLCJyZXNwb25zZSIsImdldCIsIndpdGhDcmVkZW50aWFscyIsImRhdGEiLCJtZXNzYWdlIiwiY2hhdFNsaWNlIiwibmFtZSIsInJlZHVjZXJzIiwic2V0Um9vbSIsInN0YXRlIiwiYWN0aW9uIiwicGF5bG9hZCIsImFkZE1lc3NhZ2UiLCJwdXNoIiwiY2xlYXJNZXNzYWdlcyIsImV4dHJhUmVkdWNlcnMiLCJidWlsZGVyIiwiYWRkQ2FzZSIsInBlbmRpbmciLCJmdWxmaWxsZWQiLCJyZWplY3RlZCIsImFjdGlvbnMiLCJzZWxlY3RDaGF0TWVzc2FnZXMiLCJjaGF0Iiwic2VsZWN0Q2hhdExvYWRpbmciLCJzZWxlY3RDaGF0RXJyb3IiLCJzZWxlY3RDdXJyZW50Um9vbSIsInJlZHVjZXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/chatSlice.ts\n"));

/***/ })

});