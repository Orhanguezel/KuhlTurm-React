"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/chat/page",{

/***/ "(app-pages-browser)/./src/store/chatSlice.ts":
/*!********************************!*\
  !*** ./src/store/chatSlice.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMessage: () => (/* binding */ addMessage),\n/* harmony export */   clearMessages: () => (/* binding */ clearMessages),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetchMessagesByRoom: () => (/* binding */ fetchMessagesByRoom),\n/* harmony export */   selectChatError: () => (/* binding */ selectChatError),\n/* harmony export */   selectChatLoading: () => (/* binding */ selectChatLoading),\n/* harmony export */   selectChatMessages: () => (/* binding */ selectChatMessages),\n/* harmony export */   selectCurrentRoom: () => (/* binding */ selectCurrentRoom),\n/* harmony export */   setRoom: () => (/* binding */ setRoom)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n// src/store/chatSlice.ts\n\n\nconst initialState = {\n    messages: [],\n    currentRoom: null,\n    loading: false,\n    error: null\n};\nconst BASE_URL = \"http://localhost:5012\"; // http://localhost:5012\nconst fetchMessagesByRoom = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"chat/fetchMessagesByRoom\", async (roomId, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"\".concat(BASE_URL, \"/chat/\").concat(roomId), {\n            withCredentials: true\n        });\n        return response.data;\n    } catch (error) {\n        var _error_response_data, _error_response;\n        const message = (error === null || error === void 0 ? void 0 : (_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Mesajlar alınamadı\";\n        return rejectWithValue(message);\n    }\n});\nconst chatSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"chat\",\n    initialState,\n    reducers: {\n        setRoom (state, action) {\n            state.currentRoom = action.payload;\n            state.messages = [];\n            state.error = null;\n        },\n        addMessage (state, action) {\n            state.messages.push(action.payload);\n        },\n        clearMessages (state) {\n            state.messages = [];\n            state.error = null;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchMessagesByRoom.pending, (state)=>{\n            state.loading = true;\n            state.error = null;\n        }).addCase(fetchMessagesByRoom.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.messages = action.payload;\n        }).addCase(fetchMessagesByRoom.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.payload || \"Bilinmeyen hata\";\n        });\n    }\n});\nconst { setRoom, addMessage, clearMessages } = chatSlice.actions;\nconst selectChatMessages = (state)=>state.chat.messages;\nconst selectChatLoading = (state)=>state.chat.loading;\nconst selectChatError = (state)=>state.chat.error;\nconst selectCurrentRoom = (state)=>state.chat.currentRoom;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (chatSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZS9jaGF0U2xpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5QkFBeUI7QUFDdUQ7QUFFdEQ7QUFzQjFCLE1BQU1HLGVBQTBCO0lBQzlCQyxVQUFVLEVBQUU7SUFDWkMsYUFBYTtJQUNiQyxTQUFTO0lBQ1RDLE9BQU87QUFDVDtBQUVBLE1BQU1DLFdBQVdDLHVCQUFrQyxFQUFFLHdCQUF3QjtBQUV0RSxNQUFNRyxzQkFBc0JaLGtFQUFnQkEsQ0FJakQsNEJBQTRCLE9BQU9hO1FBQVEsRUFBRUMsZUFBZSxFQUFFO0lBQzlELElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1iLDZDQUFLQSxDQUFDYyxHQUFHLENBQUMsR0FBb0JILE9BQWpCTCxVQUFTLFVBQWUsT0FBUEssU0FBVTtZQUM3REksaUJBQWlCO1FBQ25CO1FBQ0EsT0FBT0YsU0FBU0csSUFBSTtJQUN0QixFQUFFLE9BQU9YLE9BQVk7WUFFakJBLHNCQUFBQTtRQURGLE1BQU1ZLFVBQ0paLENBQUFBLGtCQUFBQSw2QkFBQUEsa0JBQUFBLE1BQU9RLFFBQVEsY0FBZlIsdUNBQUFBLHVCQUFBQSxnQkFBaUJXLElBQUksY0FBckJYLDJDQUFBQSxxQkFBdUJZLE9BQU8sS0FBSTtRQUNwQyxPQUFPTCxnQkFBZ0JLO0lBQ3pCO0FBQ0YsR0FBRztBQUVILE1BQU1DLFlBQVluQiw2REFBV0EsQ0FBQztJQUM1Qm9CLE1BQU07SUFDTmxCO0lBQ0FtQixVQUFVO1FBQ1JDLFNBQVFDLEtBQUssRUFBRUMsTUFBNkI7WUFDMUNELE1BQU1uQixXQUFXLEdBQUdvQixPQUFPQyxPQUFPO1lBQ2xDRixNQUFNcEIsUUFBUSxHQUFHLEVBQUU7WUFDbkJvQixNQUFNakIsS0FBSyxHQUFHO1FBQ2hCO1FBQ0FvQixZQUFXSCxLQUFLLEVBQUVDLE1BQWtDO1lBQ2xERCxNQUFNcEIsUUFBUSxDQUFDd0IsSUFBSSxDQUFDSCxPQUFPQyxPQUFPO1FBQ3BDO1FBQ0FHLGVBQWNMLEtBQUs7WUFDakJBLE1BQU1wQixRQUFRLEdBQUcsRUFBRTtZQUNuQm9CLE1BQU1qQixLQUFLLEdBQUc7UUFDaEI7SUFDRjtJQUNBdUIsZUFBZSxDQUFDQztRQUNkQSxRQUNHQyxPQUFPLENBQUNwQixvQkFBb0JxQixPQUFPLEVBQUUsQ0FBQ1Q7WUFDckNBLE1BQU1sQixPQUFPLEdBQUc7WUFDaEJrQixNQUFNakIsS0FBSyxHQUFHO1FBQ2hCLEdBQ0N5QixPQUFPLENBQUNwQixvQkFBb0JzQixTQUFTLEVBQUUsQ0FBQ1YsT0FBT0M7WUFDOUNELE1BQU1sQixPQUFPLEdBQUc7WUFDaEJrQixNQUFNcEIsUUFBUSxHQUFHcUIsT0FBT0MsT0FBTztRQUNqQyxHQUNDTSxPQUFPLENBQUNwQixvQkFBb0J1QixRQUFRLEVBQUUsQ0FBQ1gsT0FBT0M7WUFDN0NELE1BQU1sQixPQUFPLEdBQUc7WUFDaEJrQixNQUFNakIsS0FBSyxHQUFHa0IsT0FBT0MsT0FBTyxJQUFJO1FBQ2xDO0lBQ0o7QUFDRjtBQUVPLE1BQU0sRUFBRUgsT0FBTyxFQUFFSSxVQUFVLEVBQUVFLGFBQWEsRUFBRSxHQUFHVCxVQUFVZ0IsT0FBTyxDQUFDO0FBRWpFLE1BQU1DLHFCQUFxQixDQUFDYixRQUFxQkEsTUFBTWMsSUFBSSxDQUFDbEMsUUFBUSxDQUFDO0FBQ3JFLE1BQU1tQyxvQkFBb0IsQ0FBQ2YsUUFBcUJBLE1BQU1jLElBQUksQ0FBQ2hDLE9BQU8sQ0FBQztBQUNuRSxNQUFNa0Msa0JBQWtCLENBQUNoQixRQUFxQkEsTUFBTWMsSUFBSSxDQUFDL0IsS0FBSyxDQUFDO0FBQy9ELE1BQU1rQyxvQkFBb0IsQ0FBQ2pCLFFBQXFCQSxNQUFNYyxJQUFJLENBQUNqQyxXQUFXLENBQUM7QUFFOUUsaUVBQWVlLFVBQVVzQixPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIi9ob21lL29yaGFuL0Rva3VtZW50ZS9hbmFzdGFzaWFNYXNzYWdlL2Zyb250ZW5kL3NyYy9zdG9yZS9jaGF0U2xpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3N0b3JlL2NoYXRTbGljZS50c1xuaW1wb3J0IHsgY3JlYXRlQXN5bmNUaHVuaywgY3JlYXRlU2xpY2UsIFBheWxvYWRBY3Rpb24gfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xuaW1wb3J0IHsgUm9vdFN0YXRlIH0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcblxuLy8g8J+UuCBNZXNhaiB0aXBpXG5leHBvcnQgaW50ZXJmYWNlIENoYXRNZXNzYWdlIHtcbiAgX2lkOiBzdHJpbmc7XG4gIHJvb21JZDogc3RyaW5nO1xuICBzZW5kZXI6IHtcbiAgICBfaWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZW1haWw6IHN0cmluZztcbiAgfTtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBjcmVhdGVkQXQ6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIENoYXRTdGF0ZSB7XG4gIG1lc3NhZ2VzOiBDaGF0TWVzc2FnZVtdO1xuICBjdXJyZW50Um9vbTogc3RyaW5nIHwgbnVsbDtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7XG59XG5cbmNvbnN0IGluaXRpYWxTdGF0ZTogQ2hhdFN0YXRlID0ge1xuICBtZXNzYWdlczogW10sXG4gIGN1cnJlbnRSb29tOiBudWxsLFxuICBsb2FkaW5nOiBmYWxzZSxcbiAgZXJyb3I6IG51bGwsXG59O1xuXG5jb25zdCBCQVNFX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NPQ0tFVF9VUkw7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6NTAxMlxuXG5leHBvcnQgY29uc3QgZmV0Y2hNZXNzYWdlc0J5Um9vbSA9IGNyZWF0ZUFzeW5jVGh1bms8XG4gIENoYXRNZXNzYWdlW10sXG4gIHN0cmluZyxcbiAgeyByZWplY3RWYWx1ZTogc3RyaW5nIH1cbj4oXCJjaGF0L2ZldGNoTWVzc2FnZXNCeVJvb21cIiwgYXN5bmMgKHJvb21JZCwgeyByZWplY3RXaXRoVmFsdWUgfSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGAke0JBU0VfVVJMfS9jaGF0LyR7cm9vbUlkfWAsIHtcbiAgICAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZSxcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGNvbnN0IG1lc3NhZ2UgPVxuICAgICAgZXJyb3I/LnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8IFwiTWVzYWpsYXIgYWzEsW5hbWFkxLFcIjtcbiAgICByZXR1cm4gcmVqZWN0V2l0aFZhbHVlKG1lc3NhZ2UpO1xuICB9XG59KTtcblxuY29uc3QgY2hhdFNsaWNlID0gY3JlYXRlU2xpY2Uoe1xuICBuYW1lOiBcImNoYXRcIixcbiAgaW5pdGlhbFN0YXRlLFxuICByZWR1Y2Vyczoge1xuICAgIHNldFJvb20oc3RhdGUsIGFjdGlvbjogUGF5bG9hZEFjdGlvbjxzdHJpbmc+KSB7XG4gICAgICBzdGF0ZS5jdXJyZW50Um9vbSA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgc3RhdGUubWVzc2FnZXMgPSBbXTtcbiAgICAgIHN0YXRlLmVycm9yID0gbnVsbDtcbiAgICB9LFxuICAgIGFkZE1lc3NhZ2Uoc3RhdGUsIGFjdGlvbjogUGF5bG9hZEFjdGlvbjxDaGF0TWVzc2FnZT4pIHtcbiAgICAgIHN0YXRlLm1lc3NhZ2VzLnB1c2goYWN0aW9uLnBheWxvYWQpO1xuICAgIH0sXG4gICAgY2xlYXJNZXNzYWdlcyhzdGF0ZSkge1xuICAgICAgc3RhdGUubWVzc2FnZXMgPSBbXTtcbiAgICAgIHN0YXRlLmVycm9yID0gbnVsbDtcbiAgICB9LFxuICB9LFxuICBleHRyYVJlZHVjZXJzOiAoYnVpbGRlcikgPT4ge1xuICAgIGJ1aWxkZXJcbiAgICAgIC5hZGRDYXNlKGZldGNoTWVzc2FnZXNCeVJvb20ucGVuZGluZywgKHN0YXRlKSA9PiB7XG4gICAgICAgIHN0YXRlLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgICBzdGF0ZS5lcnJvciA9IG51bGw7XG4gICAgICB9KVxuICAgICAgLmFkZENhc2UoZmV0Y2hNZXNzYWdlc0J5Um9vbS5mdWxmaWxsZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgc3RhdGUubWVzc2FnZXMgPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgIH0pXG4gICAgICAuYWRkQ2FzZShmZXRjaE1lc3NhZ2VzQnlSb29tLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIHN0YXRlLmVycm9yID0gYWN0aW9uLnBheWxvYWQgfHwgXCJCaWxpbm1leWVuIGhhdGFcIjtcbiAgICAgIH0pO1xuICB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCB7IHNldFJvb20sIGFkZE1lc3NhZ2UsIGNsZWFyTWVzc2FnZXMgfSA9IGNoYXRTbGljZS5hY3Rpb25zO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0Q2hhdE1lc3NhZ2VzID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmNoYXQubWVzc2FnZXM7XG5leHBvcnQgY29uc3Qgc2VsZWN0Q2hhdExvYWRpbmcgPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUuY2hhdC5sb2FkaW5nO1xuZXhwb3J0IGNvbnN0IHNlbGVjdENoYXRFcnJvciA9IChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5jaGF0LmVycm9yO1xuZXhwb3J0IGNvbnN0IHNlbGVjdEN1cnJlbnRSb29tID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmNoYXQuY3VycmVudFJvb207XG5cbmV4cG9ydCBkZWZhdWx0IGNoYXRTbGljZS5yZWR1Y2VyO1xuIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jVGh1bmsiLCJjcmVhdGVTbGljZSIsImF4aW9zIiwiaW5pdGlhbFN0YXRlIiwibWVzc2FnZXMiLCJjdXJyZW50Um9vbSIsImxvYWRpbmciLCJlcnJvciIsIkJBU0VfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NPQ0tFVF9VUkwiLCJmZXRjaE1lc3NhZ2VzQnlSb29tIiwicm9vbUlkIiwicmVqZWN0V2l0aFZhbHVlIiwicmVzcG9uc2UiLCJnZXQiLCJ3aXRoQ3JlZGVudGlhbHMiLCJkYXRhIiwibWVzc2FnZSIsImNoYXRTbGljZSIsIm5hbWUiLCJyZWR1Y2VycyIsInNldFJvb20iLCJzdGF0ZSIsImFjdGlvbiIsInBheWxvYWQiLCJhZGRNZXNzYWdlIiwicHVzaCIsImNsZWFyTWVzc2FnZXMiLCJleHRyYVJlZHVjZXJzIiwiYnVpbGRlciIsImFkZENhc2UiLCJwZW5kaW5nIiwiZnVsZmlsbGVkIiwicmVqZWN0ZWQiLCJhY3Rpb25zIiwic2VsZWN0Q2hhdE1lc3NhZ2VzIiwiY2hhdCIsInNlbGVjdENoYXRMb2FkaW5nIiwic2VsZWN0Q2hhdEVycm9yIiwic2VsZWN0Q3VycmVudFJvb20iLCJyZWR1Y2VyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/chatSlice.ts\n"));

/***/ })

});